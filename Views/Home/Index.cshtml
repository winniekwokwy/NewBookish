@using NewBookish.Helpers
@model PaginatedList<NewBookish.Models.Entities.Book>

@{
    ViewData["Title"] = "Catalogue";
    Layout = null;
    int bookId = 0;
}

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="~/Scripts/LibraryCatalogue.js"></script>

<h2>Catalogue</h2>

<form asp-controller="Home" asp-action="Index" method="get">
    <p>
        <label>Search By Title: <input type="text" name="SearchTitle" value="@ViewData["TitleFilter"]" /></label>
        <label>Search By Author: <input type="text" name="SearchAuthor" value="@ViewData["AuthorFilter"]" /></label>
        <button type="submit" value="Filter" class="button">Filter</button>
        <button type="button" onclick="location.href='@Url.Action("Index", "Home")'" class="button">Clear Filter</button>
    </p>
</form>

<form asp-controller="Home" asp-action="Index" method="post">
    <p>
        <label>Title <input type="Text" name="BookTitle" value="@ViewData["BookTitle"]" /></label>
        <label>Author <input type="Text" name="BookAuthor" value="@ViewData["BookAuthor"]" /></label>
        <button type="submit" value="Index" class="button">Add Book</button>
    </p>
</form>

@if ((TempData["Error"]?.ToString() ?? null) == "true") {
    <p>@TempData["Message"]</p>
    <code>@{TempData["Error"] = "false";}</code>
    <code>@{TempData["Message"]= "";}</code>
    <button type="button" onclick="location.href='@Url.Action("Index", "Home")'" class="button">Try Again</button>
}
else {
    if (TempData["Message"]!= null) {
        <p>@TempData["Message"]</p>
        <code>@{TempData["Error"] = "false";}</code>
        <code>@{TempData["Message"]= "";}</code>
    }


<div class="mtop20">
            @if (Model.Count() > 0)
            {
                <table id="Catalogue" class="table table-bordered table-hover">
                    <thead>
                        <tr>
                            <th id="title">
                                <a asp-action="Index" asp-route-sortOrder="@ViewData["TitleSortParm"]" asp-route-currentFilter="@ViewData["CurrentTitle"]">Title</a>
                            </th>
                            <th id="author" class="hideCol hideHideCol_2">
                                <a asp-action="Index" asp-route-sortOrder="@ViewData["AuthorSortParm"]" asp-route-currentFilter="@ViewData["CurrentAuthor"]">Author</a>
                            </th>
                            <th id="TotalCopies" class="hideCol hideHideCol_3">No. of Copies</th>
                            <th id="AvailableCopies" class="hideCol hideHideCol_4">Available Copies</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>  
                    @for (int i = 0; i < Model.Count; i++)
                    {
                        bookId = Model[i].Id;
                      
                            <tr id="row_@bookId">
                                <td >@Model[i].Title</td>
                                <td >@Model[i].Author</td>
                                <td >@Model[i].NoOfCopies</td>
                                <td >@Model[i].AvailableCopies</td>
                                <td>
                                    <button class="edit-btn" data-id="@bookId">Edit</button>
                                    <button class="delete-btn" data-id="@bookId">Delete</button>
                                </td>
                            </tr>
                            <tr id="editRow_@bookId" style="display: none;">
                                <td colspan="5">    
                                    <div id="editBookContainer"></div>            
                                </td>
                            </tr>
                    }
                    </tbody> 
                </table>
                <span id="Error" class="text-danger"></span>
                <br>
                @if (Model.HasPreviousPage)
                {
                    <a asp-action="Index"
                    asp-route-sortOrder="@ViewData["CurrentSort"]"
                    asp-route-page="@(Model.PageIndex - 1)"
                    asp-route-currentFilter="@ViewData["CurrentFilter"]"
                    class="btn btn-default">
                        Previous
                    </a>
                }
                else
                {
                    <span class="btn btn-default disabled">Previous</span>
                }

                @if (Model.HasNextPage)
                {
                    <a asp-action="Index"
                    asp-route-sortOrder="@ViewData["CurrentSort"]"
                    asp-route-page="@(Model.PageIndex + 1)"
                    asp-route-currentFilter="@ViewData["CurrentFilter"]"
                    class="btn btn-default">
                        Next
                    </a>
                }
                else
                {
                    <span class="btn btn-default disabled">Next</span>
                }
            }
            else
            {
                <p>No Books available.</p>
            }
</div>
}