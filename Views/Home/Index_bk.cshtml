@using NewBookish.Helpers
@model PaginatedList<NewBookish.Models.Entities.Book>

@{
    ViewData["Title"] = "Catalogue";
    int bookId = 0;
}

<link href="../Content/StyleSheet.css" rel="stylesheet" />
<h2>Catalogue</h2>

<form asp-controller="Home" asp-action="Index" method="get">
    <p>
        <label>Search By Title: <input type="text" name="SearchTitle" value="@ViewData["TitleFilter"]" /></label>
        <label>Search By Author: <input type="text" name="SearchAuthor" value="@ViewData["AuthorFilter"]" /></label>
        <button type="submit" value="Filter" class="button">Filter</button>
        <button type="button" onclick="location.href='@Url.Action("Index", "Home")'" class="button">Clear Filter</button>
    </p>
</form>

<form asp-controller="Home" asp-action="Index" method="post">
    <p>
        <label>Title <input type="Text" name="BookTitle" value="@ViewData["BookTitle"]" /></label>
        <label>Author <input type="Text" name="BookAuthor" value="@ViewData["BookAuthor"]" /></label>
        <button type="submit" value="Index" class="button">Add Book</button>
    </p>
</form>


@if ((TempData["Error"]?.ToString() ?? null) == "true") {
    <p>@TempData["Message"]</p>
    <code>@{TempData["Error"] = "false";}</code>
    <code>@{TempData["Message"]= "";}</code>
    <button type="button" onclick="location.href='@Url.Action("Index", "Home")'" class="button">Try Again</button>
}
else {
    if (TempData["Message"]!= null) {
        <p>@TempData["Message"]</p>
        <code>@{TempData["Error"] = "false";}</code>
        <code>@{TempData["Message"]= "";}</code>
    }

    if (Model!=null)
    {
        if (Model.Count() > 0)
        {
            <table class="Books">
                <thead>
                    <tr>
                        <th>
                            <a asp-action="Index" asp-route-sortOrder="@ViewData["TitleSortParm"]" asp-route-currentFilter="@ViewData["CurrentTitle"]">Title</a>
                        </th>
                        <th>
                            <a asp-action="Index" asp-route-sortOrder="@ViewData["AuthorSortParm"]" asp-route-currentFilter="@ViewData["CurrentAuthor"]">Author</a>
                        </th>
                            <th>No. of Copies</th>
                        <th>Available Copies</th>
                        <th>Action</th>
                    </tr>
                </thead>
                @for (int i = 0; i < Model.Count; i++)
                {
                    bookId = @Model[i].Id;
                    
                    <tbody>
                        <tr id="Tr_@Model[i].Id.ToString()">
 @*                            <td id="tdTitle_@Model[i].Id.ToString()">@Model[i].Title</td>
                            <td id="tdAuthor_@Model[i].Id.ToString()">@Model[i].Author</td>
                            <td id="tdTotalCopies_@Model[i].Id.ToString()">@Model[i].NoOfCopies</td>
                            <td id="tdAvailableCopies_@Model[i].Id.ToString()">@Model[i].AvailableCopies</td>
 *@
                            <td id="txtTitle_@Model[i].Id.ToString()" ><input type='text' id="txtTitle_@Model[i].Id.ToString()" value="@Model[i].Title" disabled /></td>
                            <td id="txtAuthor_@Model[i].Id.ToString()" ><input type='text' id="txtAuthor_@Model[i].Id.ToString()" value="@Model[i].Author" disabled /></td>
                            <td id="txtTotalCopies_@Model[i].Id.ToString()"><input type='text' id="txtTotalCopies_@Model[i].Id.ToString()" value="@Model[i].NoOfCopies" disabled /></td>
                            <td id="txtAvailableCopies_@Model[i].Id.ToString()"><input type='text' id="txtAvailableCopies_@Model[i].Id.ToString()" value="@Model[i].AvailableCopies" disabled /></td>
                            <td>
@*                                 <input type="button" class="btn btn-primary" id="btnEditProd_@Model[i].Id.ToString()" value="Edit" onclick="editBookData(@Model[i].Id.ToString())" />
                                <input type="button" class="btn btn-primary" id="btnUpdateProd_@Model[i].Id.ToString()" value="Update" style="display:none;" onclick="saveBookData(@Model[i].Id.ToString(),@Model[i].Id.ToString())" />
                                <input type="button" class="btn btn-primary" id="btnDeleteProd_@Model[i].Id.ToString()" value="Delete" onclick="deleteBookData(@Model[i].Id.ToString(),@Model[i].Id.ToString())" />
                                <input type="button" class="btn btn-primary" value="Cancel" onclick="removeBookData(@Model[i].Id)" style="display:none;" id="btnCancelProd_@Model[i].Id.ToString()" /> *@
                                @Html.ActionLink("Edit", "Edit", new { id=Model[i].Id }) |
                                @Html.ActionLink("Delete", "Delete", new { id=Model[i].Id })
                            </td>
                        </tr>
                    </tbody>
                }
            </table>
            var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
            var nextDisabled = !Model.HasNextPage ? "disabled" : "";
            
            <a asp-action="Index"
            asp-route-sortOrder="@ViewData["CurrentSort"]"
            asp-route-page="@(Model.PageIndex - 1)"
            asp-route-currentFilter="@ViewData["CurrentFilter"]"
            class="btn btn-default @prevDisabled">
                Previous
            </a>
            <a asp-action="Index"
            asp-route-sortOrder="@ViewData["CurrentSort"]"
            asp-route-page="@(Model.PageIndex + 1)"
            asp-route-currentFilter="@ViewData["CurrentFilter"]"
            class="btn btn-default @nextDisabled">
                Next
            </a>
        }
        else
        {
            <p>No Books available.</p>
        }
    }
    else
    {
        <p>No Books available.</p>
    }

   @*  @if (Model != null && Model.Any())
    {
        <table class="Books">
            <thead>
                <tr>
                    <th>
                        <a asp-action="Index" asp-route-sortOrder="@ViewData["TitleSortParm"]" asp-route-currentFilter="@ViewData["CurrentTitle"]">Title</a>
                    </th>
                    <th>
                        <a asp-action="Index" asp-route-sortOrder="@ViewData["AuthorSortParm"]" asp-route-currentFilter="@ViewData["CurrentAuthor"]">Author</a>
                    </th>
                        <th>No. of Copies</th>
                    <th>Available Copies</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var book in Model)
                {
                    <tr>
                        <td>@book.Title</td>
                        <td>@book.Author</td>
                        <td>@book.NoOfCopies</td>
                        <td>@book.AvailableCopies</td>
                        <td>
                            @Html.ActionLink("Edit", "Edit", new { id=book.Id }) |
                            @Html.ActionLink("Delete", "Delete", new { id=book.Id })
                        </td>
                    </tr>
                }
            </tbody>
        </table> 
        
        var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.HasNextPage ? "disabled" : "";
        
        <a asp-action="Index"
        asp-route-sortOrder="@ViewData["CurrentSort"]"
        asp-route-page="@(Model.PageIndex - 1)"
        asp-route-currentFilter="@ViewData["CurrentFilter"]"
        class="btn btn-default @prevDisabled">
            Previous
        </a>
        <a asp-action="Index"
        asp-route-sortOrder="@ViewData["CurrentSort"]"
        asp-route-page="@(Model.PageIndex + 1)"
        asp-route-currentFilter="@ViewData["CurrentFilter"]"
        class="btn btn-default @nextDisabled">
            Next
        </a>
    }
    else{
        <p>No books available.</p>
    } *@
}